# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "btrfs" "dm_crypt" "xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3677cb6f-fc98-4b77-92b2-5ae13e84c446";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };
  
  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/172f4b08-4ff7-4650-8b27-85e0f23449af";
  boot.initrd.luks.devices."cryptroot".allowDiscards = true;
  boot.initrd.luks.devices."cryptroot".keyFile = "/cryptroot.key";
  boot.initrd.luks.devices."cryptroot".fallbackToPassword = true;

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/3677cb6f-fc98-4b77-92b2-5ae13e84c446";
      fsType = "btrfs";
      options = [ "subvol=@var" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/beb18271-9e99-49c5-b957-2375ed7c49d4";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  boot.initrd.luks.devices."cryptdata".device = "/dev/disk/by-uuid/f0c9902c-12b4-480f-90dd-8ed175f2c671";
  boot.initrd.luks.devices."cryptdata".allowDiscards = true;
  boot.initrd.luks.devices."cryptdata".keyFile = "/cryptdata.key";
  boot.initrd.luks.devices."cryptdata".fallbackToPassword = true;
  
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8495-8CD3";
      fsType = "vfat";
    };

  fileSystems."/efi" =
    { device = "/dev/disk/by-uuid/5604-6D60";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
